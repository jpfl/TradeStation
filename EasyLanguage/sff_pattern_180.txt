[LegacyColorValue = true]; 

{
Function    : sff_pattern_180
Description : Identify the 180 Pattern

Copyright 2024 Scottfree Gains LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
}

Inputs:
	Percent(Numeric),
	RangeFactor(Numeric),
	Length(Numeric);

Variables:
	RPOpen(0.0),
	RPClose(0.0),
	ATR(0.0),
	RangeCondition(False);

sff_pattern_180 = 0;

RPOpen = sff_range_rangepct(Open, High, Low);
RPClose = sff_range_rangepct(Close, High, Low);
ATR = Volatility(Length);
RangeCondition = Average(Range, 2) >= RangeFactor * ATR;

Condition1 = RPOpen[1] >= (1 - Percent) and RPClose[1] <= Percent and
			 RPOpen <= Percent and RPClose >= (1 - Percent);
Condition2 = Close[1] < Open[1] and
			 Close > Open and
		     High >= MedianPrice[1];
If (Condition1 and Condition2) and
RangeCondition Then
	sff_pattern_180 = 1;

Condition1 = RPOpen[1] <= Percent and RPClose[1] >= (1 - Percent) and
			 RPOpen >= (1 - Percent) and RPClose <= Percent;
Condition2 = Close[1] > Open[1] and
			 Close < Open and
		     Low <= MedianPrice[1];
If (Condition1 and Condition2) and
RangeCondition Then
	sff_pattern_180 = 2;
