[LegacyColorValue = true]; 

{
Indicator   : sfi_float_floatchannel
Description : Plot the float channels based on turnover

Note		: This is an implementation of the Cumulative-Volume
			  Channel Indicator described on Page 78 of the book
			  "The Precision Profit Float Indicator" by Steve Woods

Copyright 2024 Scottfree Gains LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
}

Inputs:
	FloatFactor(1.0),
	BaseBars(7),
	RangeFactor(0.3);

Variables:
	TheFloat(0.0),
	{High Parameters}
	FloatHigh1(0.0),
	FloatHigh2(0.0),
	HighBaseCount(1),
	{Low Parameters}
	FloatLow1(0.0),
	FloatLow2(0.0),
	LowBaseCount(1),
	{Alert Parameters}
	AlertString(""),
	RangeDelta(0.0),
	PercentLimit(0.25),
	LookbackBars(20),
	ADXLimit(20),
	Strength(3),
	Length2(0);

If TheFloat = 0.0 Then Begin
	{Compute the number of base bars based on float turnover}

	TheFloat = FloatFactor * sff_float_getfloat(GetSymbolName);

End Else If TheFloat > 0.0 Then Begin
	{Compute the channel lines}

	FloatHigh1 = sff_float_floatchannelhigh(TheFloat);
	Plot1(FloatHigh1, "High");

	FloatLow1 = sff_float_floatchannellow(TheFloat);
	Plot2(FloatLow1, "Low");

	{Generate alerts}
	
	RangeDelta = RangeFactor * Volatility(LookbackBars);

	If (High >= Plot1 or (High + RangeDelta >= Plot1 and
	sff_range_rangepct(Close, High, Low) >= (1 - PercentLimit))) and
	HighBaseCount >= BaseBars Then Begin
		AlertString = "Upper Float Channel Breakout: Long";
		Alert(AlertString);
	End;

	If (Low <= Plot2 or (Low - RangeDelta <= Plot2 and
	sff_range_rangepct(Close, High, Low) <= PercentLimit)) and
	LowBaseCount >= BaseBars Then Begin
		AlertString = "Lower Float Channel Breakout: Short";
		Alert(AlertString);
	End;

	If High + RangeDelta >= Plot1 and
	ADX(LookbackBars) >= ADXLimit and
	DMIMinus(LookbackBars) > DMIPlus(LookbackBars) Then Begin
		AlertString = "Touch Upper Float Channel in Downtrend: Short";
		AlertString = AlertString + " (ADX: " + NumToStr(ADX(LookbackBars), 0) + ")";
		Alert(AlertString);
	End;

	If Low - RangeDelta <= Plot2 and
	ADX(LookbackBars) >= ADXLimit and
	DMIPlus(LookbackBars) > DMIMinus(LookbackBars) Then Begin
		AlertString = "Touch Lower Float Channel in Uptrend: Long";
		AlertString = AlertString + " (ADX: " + NumToStr(ADX(LookbackBars), 0) + ")";
		Alert(AlertString);
	End;

	Length2 = sff_pattern_doubletop(LookbackBars, Strength, RangeFactor);
	If High + RangeDelta >= Plot1 and
	Length2 > 0 Then Begin
		AlertString = "Double Top: Short";
		AlertString = AlertString + " (Length: " + NumToStr(Length2, 0) + ")";
		Alert(AlertString);
	End;

	Length2 = sff_pattern_doublebottom(LookbackBars, Strength, RangeFactor);
	If Low - RangeDelta <= Plot2 and
	Length2 > 0 Then Begin
		AlertString = "Double Bottom: Long";
		AlertString = AlertString + " (Length: " + NumToStr(Length2, 0) + ")";
		Alert(AlertString);
	End;

	{Calculate running base count and changing float channel values}

	If FloatHigh1 - FloatHigh2 = 0 Then
		HighBaseCount = HighBaseCount + 1
	Else
		HighBaseCount = 1;
	FloatHigh2 = FloatHigh1;

	If FloatLow1 - FloatLow2 = 0 Then
		LowBaseCount = LowBaseCount + 1
	Else
		LowBaseCount = 1;
	FloatLow2 = FloatLow1;
End;
